Search.setIndex({"alltitles": {"Accrued Reward Replay Buffer": [[15, "accrued-reward-replay-buffer"]], "Acknowledgements": [[14, "acknowledgements"]], "Algorithms": [[10, "algorithms"]], "Applicability and limitations": [[9, "applicability-and-limitations"]], "Benchmarking script": [[10, "benchmarking-script"]], "Benchmarks": [[22, "benchmarks"]], "Citing MORL-Baselines": [[22, "citing-morl-baselines"]], "Community": [[14, "community"]], "Contributing": [[14, "contributing"]], "Diverse Replay Buffer": [[15, "diverse-replay-buffer"]], "EUPG": [[12, "eupg"]], "Envelope Q-Learning": [[2, "envelope-q-learning"]], "Evaluations": [[16, "evaluations"]], "Features of MORL-Baselines": [[22, "features-of-morl-baselines"]], "GPI-Prioritized Dyna": [[3, "gpi-prioritized-dyna"]], "Introduction": [[10, "introduction"]], "Linear Support": [[4, "linear-support"]], "MOPPO": [[9, "moppo"]], "MOQ-Learning": [[13, "moq-learning"]], "MORL-Baselines: A collection of multi-objective reinforcement learning algorithms.": [[22, "morl-baselines-a-collection-of-multi-objective-reinforcement-learning-algorithms"]], "MORL/D": [[5, "morl-d"]], "MPMOQ Learning": [[6, "mpmoq-learning"]], "Maintainers": [[14, "maintainers"]], "Metrics": [[10, "metrics"]], "Miscellaneous": [[17, "miscellaneous"]], "Multi-Objective Replay Buffer": [[15, "multi-objective-replay-buffer"]], "Multi-Policy Algorithms": [[1, "multi-policy-algorithms"]], "Multi-policy algorithms": [[10, "multi-policy-algorithms"]], "Neural Networks helpers": [[18, "module-morl_baselines.common.networks"]], "Overview": [[0, "overview"], [23, "overview"]], "PGMORL": [[9, "pgmorl"], [9, "id1"]], "Pareto Conditioned Networks": [[8, "pareto-conditioned-networks"]], "Pareto Q-Learning": [[7, "pareto-q-learning"]], "Pareto utils": [[19, "module-morl_baselines.common.pareto"]], "Performance assessments": [[10, "performance-assessments"]], "Performance indicators": [[20, "module-morl_baselines.common.performance_indicators"]], "Principle": [[9, "principle"]], "Prioritized Replay Buffer": [[15, "prioritized-replay-buffer"]], "References": [[10, "references"]], "Replay Buffers": [[15, "replay-buffers"]], "Scalarization functions": [[21, "module-morl_baselines.common.scalarization"]], "Single-policy Algorithms": [[11, "single-policy-algorithms"]], "Single-policy algorithms": [[10, "single-policy-algorithms"]], "Storage": [[10, "storage"]], "Weight generator - prediction model": [[9, "weight-generator-prediction-model"]]}, "docnames": ["algos/algorithms", "algos/multi_policy", "algos/multi_policy/envelope", "algos/multi_policy/gpi_pd", "algos/multi_policy/linear_support", "algos/multi_policy/morld", "algos/multi_policy/mp_mo_q_learning", "algos/multi_policy/pareto_q_learning", "algos/multi_policy/pcn", "algos/multi_policy/pgmorl", "algos/performances", "algos/single_policy", "algos/single_policy/eupg", "algos/single_policy/moq_learning", "community/community", "features/buffers", "features/evaluations", "features/misc", "features/networks", "features/pareto", "features/performance_indicators", "features/scalarization", "index", "quickstart/overview"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["algos/algorithms.md", "algos/multi_policy.md", "algos/multi_policy/envelope.md", "algos/multi_policy/gpi_pd.md", "algos/multi_policy/linear_support.md", "algos/multi_policy/morld.md", "algos/multi_policy/mp_mo_q_learning.md", "algos/multi_policy/pareto_q_learning.md", "algos/multi_policy/pcn.md", "algos/multi_policy/pgmorl.md", "algos/performances.md", "algos/single_policy.md", "algos/single_policy/eupg.md", "algos/single_policy/moq_learning.md", "community/community.md", "features/buffers.md", "features/evaluations.md", "features/misc.md", "features/networks.md", "features/pareto.md", "features/performance_indicators.md", "features/scalarization.md", "index.md", "quickstart/overview.md"], "indexentries": {"accruedrewardreplaybuffer (class in morl_baselines.common.accrued_reward_buffer)": [[15, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer", false]], "add() (morl_baselines.common.accrued_reward_buffer.accruedrewardreplaybuffer method)": [[15, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer.add", false]], "add() (morl_baselines.common.buffer.replaybuffer method)": [[15, "morl_baselines.common.buffer.ReplayBuffer.add", false]], "add() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.add", false]], "add() (morl_baselines.common.pareto.paretoarchive method)": [[19, "morl_baselines.common.pareto.ParetoArchive.add", false]], "add() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[15, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.add", false]], "add_sample() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.add_sample", false]], "add_tree() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.add_tree", false]], "cardinality() (in module morl_baselines.common.performance_indicators)": [[20, "morl_baselines.common.performance_indicators.cardinality", false]], "cleanup() (morl_baselines.common.accrued_reward_buffer.accruedrewardreplaybuffer method)": [[15, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer.cleanup", false]], "diversememory (class in morl_baselines.common.diverse_buffer)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory", false]], "dupe() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.dupe", false]], "expected_utility() (in module morl_baselines.common.performance_indicators)": [[20, "morl_baselines.common.performance_indicators.expected_utility", false]], "extract_trace() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.extract_trace", false]], "forward() (morl_baselines.common.networks.naturecnn method)": [[18, "morl_baselines.common.networks.NatureCNN.forward", false]], "get() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.get", false]], "get_all_data() (morl_baselines.common.accrued_reward_buffer.accruedrewardreplaybuffer method)": [[15, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer.get_all_data", false]], "get_all_data() (morl_baselines.common.buffer.replaybuffer method)": [[15, "morl_baselines.common.buffer.ReplayBuffer.get_all_data", false]], "get_all_data() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[15, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.get_all_data", false]], "get_data() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.get_data", false]], "get_error() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.get_error", false]], "get_non_dominated() (in module morl_baselines.common.pareto)": [[19, "morl_baselines.common.pareto.get_non_dominated", false]], "get_non_dominated_inds() (in module morl_baselines.common.pareto)": [[19, "morl_baselines.common.pareto.get_non_dominated_inds", false]], "get_sec_write() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.get_sec_write", false]], "get_trace_value() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.get_trace_value", false]], "hypervolume() (in module morl_baselines.common.performance_indicators)": [[20, "morl_baselines.common.performance_indicators.hypervolume", false]], "igd() (in module morl_baselines.common.performance_indicators)": [[20, "morl_baselines.common.performance_indicators.igd", false]], "main_mem_is_full() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.main_mem_is_full", false]], "maximum_utility_loss() (in module morl_baselines.common.performance_indicators)": [[20, "morl_baselines.common.performance_indicators.maximum_utility_loss", false]], "mlp() (in module morl_baselines.common.networks)": [[18, "morl_baselines.common.networks.mlp", false]], "module": [[18, "module-morl_baselines.common.networks", false], [19, "module-morl_baselines.common.pareto", false], [20, "module-morl_baselines.common.performance_indicators", false], [21, "module-morl_baselines.common.scalarization", false]], "morl_baselines.common.networks": [[18, "module-morl_baselines.common.networks", false]], "morl_baselines.common.pareto": [[19, "module-morl_baselines.common.pareto", false]], "morl_baselines.common.performance_indicators": [[20, "module-morl_baselines.common.performance_indicators", false]], "morl_baselines.common.scalarization": [[21, "module-morl_baselines.common.scalarization", false]], "move_to_sec() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.move_to_sec", false]], "naturecnn (class in morl_baselines.common.networks)": [[18, "morl_baselines.common.networks.NatureCNN", false]], "paretoarchive (class in morl_baselines.common.pareto)": [[19, "morl_baselines.common.pareto.ParetoArchive", false]], "prioritizedreplaybuffer (class in morl_baselines.common.prioritized_buffer)": [[15, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer", false]], "remove_trace() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.remove_trace", false]], "replaybuffer (class in morl_baselines.common.buffer)": [[15, "morl_baselines.common.buffer.ReplayBuffer", false]], "sample() (morl_baselines.common.accrued_reward_buffer.accruedrewardreplaybuffer method)": [[15, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer.sample", false]], "sample() (morl_baselines.common.buffer.replaybuffer method)": [[15, "morl_baselines.common.buffer.ReplayBuffer.sample", false]], "sample() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.sample", false]], "sample() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[15, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.sample", false]], "sample_obs() (morl_baselines.common.buffer.replaybuffer method)": [[15, "morl_baselines.common.buffer.ReplayBuffer.sample_obs", false]], "sample_obs() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[15, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.sample_obs", false]], "sec_distances() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.sec_distances", false]], "sparsity() (in module morl_baselines.common.performance_indicators)": [[20, "morl_baselines.common.performance_indicators.sparsity", false]], "tchebicheff() (in module morl_baselines.common.scalarization)": [[21, "morl_baselines.common.scalarization.tchebicheff", false]], "update() (morl_baselines.common.diverse_buffer.diversememory method)": [[15, "morl_baselines.common.diverse_buffer.DiverseMemory.update", false]], "update_priorities() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[15, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.update_priorities", false]], "weighted_sum() (in module morl_baselines.common.scalarization)": [[21, "morl_baselines.common.scalarization.weighted_sum", false]]}, "objects": {"morl_baselines.common": [[18, 2, 0, "-", "networks"], [19, 2, 0, "-", "pareto"], [20, 2, 0, "-", "performance_indicators"], [21, 2, 0, "-", "scalarization"]], "morl_baselines.common.accrued_reward_buffer": [[15, 0, 1, "", "AccruedRewardReplayBuffer"]], "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer": [[15, 1, 1, "", "add"], [15, 1, 1, "", "cleanup"], [15, 1, 1, "", "get_all_data"], [15, 1, 1, "", "sample"]], "morl_baselines.common.buffer": [[15, 0, 1, "", "ReplayBuffer"]], "morl_baselines.common.buffer.ReplayBuffer": [[15, 1, 1, "", "add"], [15, 1, 1, "", "get_all_data"], [15, 1, 1, "", "sample"], [15, 1, 1, "", "sample_obs"]], "morl_baselines.common.diverse_buffer": [[15, 0, 1, "", "DiverseMemory"]], "morl_baselines.common.diverse_buffer.DiverseMemory": [[15, 1, 1, "", "add"], [15, 1, 1, "", "add_sample"], [15, 1, 1, "", "add_tree"], [15, 1, 1, "", "dupe"], [15, 1, 1, "", "extract_trace"], [15, 1, 1, "", "get"], [15, 1, 1, "", "get_data"], [15, 1, 1, "", "get_error"], [15, 1, 1, "", "get_sec_write"], [15, 1, 1, "", "get_trace_value"], [15, 1, 1, "", "main_mem_is_full"], [15, 1, 1, "", "move_to_sec"], [15, 1, 1, "", "remove_trace"], [15, 1, 1, "", "sample"], [15, 1, 1, "", "sec_distances"], [15, 1, 1, "", "update"]], "morl_baselines.common.networks": [[18, 0, 1, "", "NatureCNN"], [18, 3, 1, "", "mlp"]], "morl_baselines.common.networks.NatureCNN": [[18, 1, 1, "", "forward"]], "morl_baselines.common.pareto": [[19, 0, 1, "", "ParetoArchive"], [19, 3, 1, "", "get_non_dominated"], [19, 3, 1, "", "get_non_dominated_inds"]], "morl_baselines.common.pareto.ParetoArchive": [[19, 1, 1, "", "add"]], "morl_baselines.common.performance_indicators": [[20, 3, 1, "", "cardinality"], [20, 3, 1, "", "expected_utility"], [20, 3, 1, "", "hypervolume"], [20, 3, 1, "", "igd"], [20, 3, 1, "", "maximum_utility_loss"], [20, 3, 1, "", "sparsity"]], "morl_baselines.common.prioritized_buffer": [[15, 0, 1, "", "PrioritizedReplayBuffer"]], "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer": [[15, 1, 1, "", "add"], [15, 1, 1, "", "get_all_data"], [15, 1, 1, "", "sample"], [15, 1, 1, "", "sample_obs"], [15, 1, 1, "", "update_priorities"]], "morl_baselines.common.scalarization": [[21, 3, 1, "", "tchebicheff"], [21, 3, 1, "", "weighted_sum"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function"}, "terms": {"": [10, 15, 23], "0": [15, 18], "01": 15, "022": 10, "05": 15, "09552": 10, "1": [0, 10, 15], "10": 10, "100000": 15, "1007": 10, "10607": 10, "10616": 10, "1e": 15, "2": [0, 9, 10, 15], "2015": [10, 18, 20], "2020": 10, "2022": [10, 22], "3": [0, 9, 10, 22], "32791911": 19, "36": 10, "37th": 10, "50": 10, "512": 18, "518": 18, "529": 18, "533": 18, "7540": 18, "A": [10, 15, 20], "As": 23, "At": 9, "But": 20, "For": [10, 22], "If": [14, 15], "In": 10, "It": [10, 18, 21, 22], "That": 10, "The": [0, 5, 9, 10, 15, 18, 19, 22, 23], "There": 5, "These": [10, 15], "To": 10, "_nestedsequ": 20, "_supportsarrai": 20, "abl": 10, "accordingli": 10, "accrued_reward": 15, "accrued_reward_buff": 15, "accruedrewardreplaybuff": 15, "action": [0, 9, 15], "action_dim": 15, "action_dtyp": 15, "action_mask": 15, "action_mask_dim": 15, "action_shap": 15, "activ": 18, "activation_fn": 18, "adapt": [9, 21], "add": [15, 19], "add_sampl": 15, "add_tre": 15, "after": 18, "against": 22, "agent": [9, 10], "ai": 22, "aim": 22, "al": [10, 18], "alegr": [14, 22], "algorithm": [0, 5, 9, 14, 15, 20, 23], "all": [10, 14, 15, 19, 22, 23], "allow": 10, "along": [9, 10], "also": [10, 14, 22], "alwai": [14, 21], "an": [10, 14, 18, 22], "analysi": [9, 10], "ani": 20, "answer": 19, "api": [10, 22], "appli": [5, 15], "approach": [10, 20], "approxim": 20, "apr": 10, "ar": [0, 5, 9, 10, 14, 15, 19, 20, 22], "architectur": 18, "archiv": 19, "arrai": [15, 19, 22], "asid": 14, "ask": 14, "assess": 20, "assign": 9, "assum": 0, "assumpt": 10, "author": [9, 22], "autom": 10, "automat": [21, 22], "autonom": 10, "avail": [10, 15, 22], "averag": [10, 20], "axelabel": 15, "axiomat": 20, "base": [5, 9, 10, 20, 22], "baselin": [0, 14, 23], "basic": 20, "batch": 15, "batch_siz": 15, "beau": [10, 20], "becaus": 15, "been": [0, 9, 19, 22], "below": [10, 15], "benchmark": 0, "best": [9, 21], "between": [10, 20], "bias": 22, "bool": [15, 18, 20], "boolean": 19, "both": [10, 22], "buffer": [22, 23], "bug": 14, "byte": 20, "c": 10, "calcul": 19, "callabl": [20, 21], "can": [5, 10, 14, 22], "candid": 19, "capql": 0, "cardin": [10, 20], "cc": 10, "cer": 15, "chang": [10, 19], "check": 15, "circular": 15, "class": [15, 18, 19], "cleanrl": [9, 22], "cleanup": 15, "cli": 10, "close": 5, "cnn": 18, "code": [9, 15, 19, 22], "collect": 18, "com": [15, 19, 22], "commit": 22, "common": [10, 15, 18, 19, 20, 21, 23], "compar": 5, "complex": 20, "compon": 21, "comput": [9, 10, 15, 20], "concept": 23, "condit": 0, "conduct": 10, "confer": 10, "configur": 10, "connect": 18, "conor": 14, "consecut": 10, "contain": [0, 15, 22, 23], "continu": [0, 9, 10], "contributor": 14, "control": [10, 18], "converg": 10, "convert": 15, "convex": 10, "copi": 15, "correct": 10, "correspond": 15, "coverag": 10, "creat": 18, "criteria": 22, "crowd": 15, "crowding_divers": 15, "current": [0, 9, 10, 14, 15, 18, 20, 22], "current_estim": 20, "customli": 20, "d": [0, 10, 20], "dashboard": 22, "data": [9, 15], "decompos": 5, "decomposit": [5, 22], "deep": 18, "default": [10, 15, 20], "definit": 22, "deni": 14, "detail": [5, 9, 22, 23], "determin": 15, "determinist": 0, "devic": 15, "dictionari": 15, "differ": [9, 22], "dimens": [18, 21], "directli": 14, "discord": 14, "discount": 10, "discret": 0, "discuss": 14, "distanc": [10, 15, 20], "divers": 10, "diverse_buff": 15, "diversememori": 15, "do": 10, "document": [10, 22, 23], "doi": 10, "domin": [19, 21], "done": 15, "dot": [20, 21], "dqn": 18, "drop_rat": 18, "dropout": 18, "dtype": 20, "dupe": 15, "dure": 9, "dynmorl": 15, "e": [15, 20, 22], "each": [5, 9, 10, 15, 18, 20, 21], "effici": 5, "element": [15, 19], "els": 9, "end": 15, "enforc": 22, "enhanc": 9, "ensur": 10, "env": 10, "envelop": 0, "environ": [0, 10, 22, 23], "equal": 10, "error": 15, "esr": [0, 15, 22, 23], "essenti": 9, "et": [10, 18], "etc": [22, 23], "eum": [10, 20], "eupg": [0, 14], "eval": 10, "evalu": [10, 19], "exampl": 23, "expect": [0, 10, 20], "expected_util": 20, "experi": [15, 22], "extract": 15, "extract_trac": 15, "f": [10, 14, 20], "fals": [15, 18], "far": 21, "fast": 19, "featur": [0, 14, 18], "features_dim": 18, "felten": [14, 22], "few": 9, "ffelten": 14, "file": 23, "fill": 15, "final": 10, "find": 15, "fix": 14, "float": [15, 18, 20, 21], "float32": 15, "florian": [14, 22], "flow": 10, "follow": [0, 10, 15, 18, 22, 23], "format": [10, 22], "forward": 18, "found": [10, 22], "framework": [5, 22], "free": 15, "from": [9, 10, 14, 15, 18, 20, 22], "front": [10, 19, 20], "full": [10, 15], "fulli": 18, "function": [10, 15, 18, 19, 20, 22], "further": 9, "g": [20, 22], "gather": 9, "gener": [10, 20], "get": [14, 15], "get_all_data": 15, "get_data": 15, "get_error": 15, "get_non_domin": 19, "get_non_dominated_ind": 19, "get_sec_writ": 15, "get_trace_valu": 15, "github": [9, 15, 22], "give": 15, "given": [9, 15], "good": 10, "gpi": 0, "gradient": 0, "guid": [10, 22], "gymnasium": [10, 22, 23], "ha": 9, "happi": 14, "have": [0, 10, 14, 19, 22], "hay": [10, 14], "help": 14, "henc": 10, "here": [10, 14, 22], "hi": 14, "histor": 9, "hook": 22, "howpublish": 22, "html": 10, "http": [10, 15, 19, 22], "human": 18, "hv": 20, "hybrid": 10, "hyper": 22, "hypervolum": [10, 20], "i": [0, 5, 9, 10, 14, 15, 18, 19, 20, 21, 22, 23], "id": 15, "idea": [5, 10, 14], "identifi": 15, "idx": 15, "igd": [10, 20], "implement": [0, 9, 10, 14, 15, 22, 23], "import": 19, "improv": 5, "includ": 15, "include_indic": 15, "index": 15, "indic": [15, 19], "ineffici": 19, "input": [18, 19], "input_dim": 18, "int": [15, 18, 20, 21], "int32": 15, "integr": 15, "intern": 10, "invert": 20, "issu": [10, 14], "iter": 9, "its": [15, 20], "j": 10, "join": 14, "journal": 22, "just": 5, "kanter": [10, 20], "keep": 9, "keyword": 10, "know": [10, 15, 20], "known": 20, "known_front": 20, "l": [0, 10, 20], "lambda": 15, "launch_experi": 10, "layer": 18, "layer_norm": 18, "learn": [0, 5, 9, 10, 14, 15, 18], "length": 18, "level": 18, "librari": [15, 22], "life": 10, "like": 14, "limit": 0, "linear": 0, "lint": 22, "list": [0, 15, 18, 20], "literatur": 10, "locat": 10, "log": 10, "long": 10, "look": 9, "loop": 0, "loss": [10, 20], "low": 15, "luca": [14, 22], "lucasalegr": [14, 22], "m": [10, 20], "ma": 10, "machin": 10, "made": [19, 20], "main": [9, 14, 15], "main_capac": 15, "main_mem_is_ful": 15, "mainten": 10, "mani": 14, "mask": 15, "materi": 0, "matusik": 10, "max_sampl": 15, "max_siz": 15, "maximum": [10, 15, 20], "maximum_utility_loss": 20, "mdp": 22, "memori": [15, 19], "merg": 10, "method": [10, 15], "metric": 20, "might": 9, "min_prior": 15, "misc": 22, "mlp": 18, "mlr": 10, "mnih": 18, "mo": [0, 10, 22, 23], "modul": 18, "momdp": 22, "moo": [10, 20], "moql": 0, "more": [5, 9, 23], "moreov": 10, "morl": [0, 10, 14, 20, 23], "morl_baselin": [15, 18, 19, 20, 21, 22], "mostli": 20, "move": 15, "move_to_sec": 15, "mpmoqlearn": 0, "much": 23, "mul": [10, 20], "multi": [0, 5, 9, 18, 20, 23], "multi_polici": 23, "multipl": [0, 5, 9, 15], "n": [14, 15, 22], "name": 0, "natur": 18, "naturecnn": 18, "ndarrai": [18, 19, 20, 21], "nearest": 20, "need": 20, "net": [18, 23], "net_arch": 18, "network": [0, 9], "neural": 23, "new": [14, 15], "next": 15, "next_ob": 15, "nn": 18, "node": 15, "non": 19, "none": 15, "normal": 18, "note": 9, "nov": 10, "now": 9, "np": 20, "number": [10, 15, 18], "numpi": [15, 20, 21, 22], "ob": 15, "object": [0, 5, 9, 10, 20], "obs_dtyp": 15, "obs_shap": 15, "observ": [0, 9, 15, 18], "observation_shap": 18, "offici": 10, "ol": 0, "oliehoek": [10, 20], "one": 20, "ones": 22, "onli": [20, 22], "open": [14, 22], "openrlbenchmark": [10, 22], "optim": [10, 20, 22], "optimist": 0, "origin": [9, 10, 14, 22], "other": [10, 15, 22], "our": [9, 10, 14, 22], "outer": 0, "output": 18, "output_dim": 18, "overview": 22, "p": [10, 20], "pair": 15, "paper": [0, 5, 9, 10, 18, 20, 22], "paramet": [10, 15, 18, 19, 20, 21, 22], "pareto": [0, 9, 10, 14, 20, 22], "paretoarch": 19, "particip": 22, "past": 15, "pcn": 0, "pd": 0, "peopl": 14, "per": 18, "perceptron": 18, "perform": [9, 22], "performance_ind": [10, 20], "pf": [10, 20], "pgmorl": [0, 10, 20], "phase": 9, "plan": [10, 22], "plot": 10, "point": [10, 19, 20, 21], "polici": [0, 20, 22, 23], "popul": 9, "popular": 22, "posit": 15, "possibl": [9, 10, 23], "post": 9, "posteriori": 10, "pp": 10, "ppo": 9, "practic": [10, 22], "pre": 22, "pred_idx": 15, "predict": [10, 18], "present": 10, "press": 10, "previou": 15, "prioriti": 15, "prioritized_buff": 15, "prioritizedreplaybuff": 15, "problem": [5, 10, 20], "proceed": 10, "process": 9, "product": [20, 21], "progress": 10, "project": 14, "proport": 15, "propos": 10, "provid": [9, 14, 15, 19, 22], "prune": 22, "publish": 22, "pull": 14, "purpos": 10, "py": 10, "pymoo": 20, "python": 19, "pytorch": [15, 22], "q": [0, 14], "qualiti": [10, 20], "queri": 10, "question": [14, 19], "r": 20, "rate": 18, "read": 22, "receiv": 14, "recur": 23, "recurs": 15, "ref_point": 20, "refactor": 9, "refer": [20, 21], "reference_set": 20, "reinforc": [0, 5, 10, 15, 18], "relev": 15, "reli": [9, 10, 20, 21], "reliabl": 22, "relu": 18, "remov": [15, 19], "remove_trac": 15, "replac": 15, "replai": 23, "replaybuff": 15, "repo": 23, "report": 22, "repositori": [14, 22], "repres": 18, "reproduc": 10, "request": 14, "requir": [10, 20, 21], "reserved_idx": 15, "respect": 10, "result": [10, 22], "return": [9, 10, 15, 19, 20, 21, 22], "rew_dim": 15, "reward": [21, 22], "reward_dim": 21, "rl": [5, 20, 22], "robot": 10, "roijer": [10, 20], "ru": 10, "rule": 23, "run": [10, 22], "r\u00f6pke": 14, "s10458": 10, "sake": 10, "same": 15, "sampl": [5, 15], "sample_ob": 15, "scalar": [9, 10], "scalarized_discounted_return": 10, "scalarized_return": 10, "sec_capac": 15, "sec_dist": 15, "secondari": 15, "secondary_trac": 15, "section": [0, 9], "see": [5, 9, 23], "seed": 10, "seen": 21, "select": 9, "sent": 10, "sequenti": [5, 18], "ser": [0, 22, 23], "server": 14, "set": [5, 10, 15, 19, 20, 23], "should": 15, "similar": 20, "simplex": 10, "singl": [0, 5, 22, 23], "single_polici": 23, "size": 15, "so": 21, "solut": 19, "solv": 5, "some": [0, 9, 10, 20, 22], "someth": [5, 9], "sota": 10, "sourc": [15, 19], "space": [0, 9, 10], "span": 15, "sparsiti": [10, 20], "specifi": 15, "spot": 15, "src_i": 15, "stabl": 22, "stackoverflow": 19, "stage": 9, "standard": 22, "start": 15, "state": 20, "steckelmach": 14, "store": 15, "str": 20, "strictli": 22, "structur": 23, "subset": 19, "sueda": 10, "suffici": 15, "suggest": 22, "sum": [9, 21], "supplementari": 0, "support": [0, 9, 10], "sure": 21, "system": 10, "t": [10, 20], "tabl": [0, 10], "target": 15, "tau": 21, "taxonomi": 22, "tchebicheff": 21, "techniqu": 22, "tensor": [15, 18], "term": 10, "test": [10, 22], "than": 9, "thank": 14, "them": [0, 10, 14], "thesi": 0, "thi": [5, 9, 10, 14, 15, 18, 19, 21, 22, 23], "those": 15, "through": 18, "tian": 10, "titl": 22, "to_tensor": 15, "torch": 18, "trace": 15, "trace_divers": 15, "trace_id": 15, "trace_tupl": 15, "track": [10, 22], "tradeoff": 9, "train": 9, "transit": [0, 15], "treat": 15, "tree": 15, "tree_id": 15, "trg_i": 15, "tri": 23, "trick": 5, "true": [10, 15, 20], "tupl": 15, "tutori": 22, "type": [18, 20], "u": 14, "under": 22, "unit": 18, "updat": 15, "update_prior": 15, "url": 22, "us": [9, 10, 15, 18, 20, 22, 23], "use_c": 15, "user": 10, "util": [0, 10, 18, 20, 22], "v": [10, 20], "v119": 10, "valu": [9, 10, 15, 20, 21], "value_funct": 15, "variou": [9, 10, 14, 20, 22], "vector": [9, 18, 19, 20, 21], "vol": 10, "volodymyr": 18, "w": 10, "wa": 15, "wai": [14, 15], "wandb": [10, 22], "want": [10, 14], "warn": [0, 10], "we": [10, 14, 15, 20, 22], "weight": [10, 20, 21, 22], "weighted_sum": 21, "weights_set": 20, "well": 22, "were": 10, "when": [5, 10, 15], "where": 14, "wherea": 10, "whether": [15, 18], "which": [5, 10, 15, 18, 19, 22], "who": 14, "whole": 15, "whose": 15, "willem": 14, "wilrop": 14, "work": 10, "would": 14, "write": 15, "wrong": 19, "xu": 10, "xu20h": 10, "y": 10, "year": 22, "yet": [0, 9], "you": 14, "your": 14, "zintgraf": [10, 20]}, "titles": ["Overview", "Multi-Policy Algorithms", "Envelope Q-Learning", "GPI-Prioritized Dyna", "Linear Support", "MORL/D", "MPMOQ Learning", "Pareto Q-Learning", "Pareto Conditioned Networks", "PGMORL", "Performance assessments", "Single-policy Algorithms", "EUPG", "MOQ-Learning", "Community", "Replay Buffers", "Evaluations", "Miscellaneous", "Neural Networks helpers", "Pareto utils", "Performance indicators", "Scalarization functions", "MORL-Baselines: A collection of multi-objective reinforcement learning algorithms.", "Overview"], "titleterms": {"A": 22, "accru": 15, "acknowledg": 14, "algorithm": [1, 10, 11, 22], "applic": 9, "assess": 10, "baselin": 22, "benchmark": [10, 22], "buffer": 15, "cite": 22, "collect": 22, "commun": 14, "condit": 8, "contribut": 14, "d": 5, "divers": 15, "dyna": 3, "envelop": 2, "eupg": 12, "evalu": 16, "featur": 22, "function": 21, "gener": 9, "gpi": 3, "helper": 18, "indic": 20, "introduct": 10, "learn": [2, 6, 7, 13, 22], "limit": 9, "linear": 4, "maintain": 14, "metric": 10, "miscellan": 17, "model": 9, "moppo": 9, "moq": 13, "morl": [5, 22], "mpmoq": 6, "multi": [1, 10, 15, 22], "network": [8, 18], "neural": 18, "object": [15, 22], "overview": [0, 23], "pareto": [7, 8, 19], "perform": [10, 20], "pgmorl": 9, "polici": [1, 10, 11], "predict": 9, "principl": 9, "priorit": [3, 15], "q": [2, 7], "refer": 10, "reinforc": 22, "replai": 15, "reward": 15, "scalar": 21, "script": 10, "singl": [10, 11], "storag": 10, "support": 4, "util": 19, "weight": 9}})